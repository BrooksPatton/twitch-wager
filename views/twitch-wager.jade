extends layout

block title
	title Twitch Wagers - Bet fake internet money on the outcome of your favorite Twitch.tv streamers

block brand
	a.navbar-brand(href='/twitch-wager') Twitch Wagers

block navbar
	#user-fim-count
	button.navbar-btn.btn.btn-default#register-stream Register your stream

block content
	#wagers
	#main

block scripts
	script#streamer-console-template(type="text/x-handlebars-template").
		{{#if streaming}} 
			//- the streamer is currently streaming a game
			{{#if stream.attributes.playing}}
				//- A game is running
				<div class='row'>
					<button class='btn btn-success col-xs-4 game-status' id='game-won'>I won</button>
					<button class='btn btn-danger col-xs-4 game-status' id='game-lost'>I lost</button>
				</div>
				<div class='row'>
					<button class='btn btn-warning col-xs-8' id='end-stream'>End Stream</button>
				</div>
			{{else}}
				//- A game is not running yet
				<div class='row'>
					<button class='btn btn-primary col-xs-8' id='start-round'>start round</button>
				</div>
				<div class='row'>
					<button class='btn btn-warning col-xs-8' id='end-stream'>End Stream</button>
				</div>
			{{/if}}
		{{else}}
			//- The streamer is not streaming now
			<button class='btn btn-success col-xs-8' id='start-stream'>Start stream</button>
		{{/if}}
	script#select-stream-template(type="text/x-handlebars-template").
		{{#each streams}}
			<h1 class='orange-text stream col-xs-4' data-name='{{username}}'>{{username}}</h1>
		{{/each}}
	script#view-stream-template(type="text/x-handlebars-template").
		<div class='row'>
			<div>
				<object type="application/x-shockwave-flash" height="378" width="620" id="live_embed_player_flash" data="http://www.twitch.tv/widgets/live_embed_player.swf?channel={{username}}" bgcolor="#000000"><param name="allowFullScreen" value="true" /><param name="allowScriptAccess" value="always" /><param name="allowNetworking" value="all" /><param name="movie" value="http://www.twitch.tv/widgets/live_embed_player.swf" /><param name="flashvars" value="hostname=www.twitch.tv&channel={{username}}&auto_play=true&start_volume=25" /></object>
			</div>
		</div>
		<div class='row'>
			<div class='col-xs-offset-4 hidden' id='betting-on'>
					<button class='col-xs-2 btn btn-success' id='bet-win'>Bet win</button>
					<button class='col-xs-2 btn btn-danger' id='bet-lose'>Bet lose</button>
			</div>
		</div>
	script#wagers-template(type="text/x-handlebars-template").
		<h3 class='orange-text'>Wagers</h3>
		{{#each wagers}}
			<p class='orange-text'>{{user}} - {{wager}} - {{amount}}</p>
		{{/each}}
	script.
		//- This is a fun one. We are embedding the mongodb _id for the user object into the javascript namespace so that it can be referenced by the variable userId. We are doing this by using the JSON.stringify command which flattens the data. When it gets to the client, it is in a script tag, so the JSON.parse command runs immediately which returns the string to normal and saves it in userId. 
		var userId = JSON.parse('!{JSON.stringify(userId)}');
	script(src='/js/main.min.js')